{"version":3,"sources":["./src/app/components/chat/message/messagemodal.component.ts","./src/app/components/chat/message/messagemodal.component.html","./src/app/components/chat/chatlist/chatlist.component.ts","./src/app/components/chat/chatlist/chatlist.component.html","./src/app/components/chat/message/message.component.html","./src/app/components/chat/message/message.component.ts","./src/app/models/message.model.ts","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/chat/chatmodal/chatmodal.component.ts","./src/app/components/chat/chatmodal/chatmodal.component.html","./src/app/components/chat/chatdetail/chatdetail.component.ts","./src/app/components/chat/chatdetail/chatdetail.component.html","./src/app/models/timemessage.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/auth-redirecters.service.ts","./src/app/models/chatdetailed.model.ts","./src/app/components/error/errormodal.component.ts","./src/app/components/error/errormodal.component.html","./src/app/components/signin/signin.component.ts","./src/app/components/signin/signin.component.html","./src/app/app.module.ts","./src/app/services/token-storage.service.ts","./src/app/helpers/auth.interceptor.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/components/modals/confirmation/confirmation.component.ts","./src/app/components/modals/confirmation/confirmation.component.html","./src/app/services/user.service.ts","./src/app/components/error/errorpage.component.ts","./src/app/components/error/errorpage.component.html","./src/app/services/chat.service.ts","./src/app/services/message.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-messagemodal',\n  templateUrl: './messagemodal.component.html',\n  styleUrls: ['./messagemodal.component.css']\n})\nexport class MessagemodalComponent {\n\n  locked:Boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<MessagemodalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { \n      this.locked = data.message.type!=null && data.message.time!=null;\n    }\n\n    typeValidator = new FormControl('', [Validators.required]);\n    statusValidator = new FormControl('', [Validators.required]);\n    timeValidator = new FormControl('', [Validators.required]);\n    \n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n\n}\n","<h1 *ngIf=\"!locked\" mat-dialog-title>Nuevo mensaje</h1>\n<h1 *ngIf=\"locked\" mat-dialog-title>Editar mensaje</h1>\n<div mat-dialog-content>\n    <mat-form-field>\n        <mat-label>Tipo de mensaje</mat-label>\n        <mat-select [(value)]=\"data.message.type\" [formControl]=\"typeValidator\" [disabled]=\"locked\">\n          <mat-option value=\"0\">Recibido</mat-option>\n          <mat-option value=\"1\">Enviado</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <input matInput [ngxMatDatetimePicker]=\"picker\" placeholder=\"Escoge fecha y hora\" [(ngModel)]=\"data.message.time\" [formControl]=\"timeValidator\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\" style=\"font-size: x-large;\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker touchUi=\"true\" #picker></ngx-mat-datetime-picker>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>Estado del mensaje</mat-label>\n        <mat-select [(value)]=\"data.message.status\" [formControl]=\"statusValidator\">\n          <mat-option value=\"0\">No enviado</mat-option>\n          <mat-option value=\"1\">Enviado</mat-option>\n          <mat-option value=\"2\">Recibido</mat-option>\n          <mat-option value=\"3\">Leido</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button *ngIf=\"!locked\" mat-button [mat-dialog-close]=\"data.message\" \n    color=\"accent\" [disabled]=\"timeValidator.invalid || typeValidator.invalid || statusValidator.invalid\">Enviar</button>\n    <button *ngIf=\"locked\" mat-button [mat-dialog-close]=\"data.message\" \n    color=\"accent\" [disabled]=\"timeValidator.invalid || typeValidator.invalid || statusValidator.invalid\">Guardar</button>\n    <button mat-button mat-dialog-close>Cerrar</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Chat } from 'src/app/models/chat.model';\nimport { ChatService } from '../../../services/chat.service';\nimport { DatePipe } from '@angular/common'\nimport { ConfirmationComponent } from '../../modals/confirmation/confirmation.component';\nimport {ChatmodalComponent} from '../chatmodal/chatmodal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-chatlist',\n  templateUrl: './chatlist.component.html',\n  styleUrls: ['./chatlist.component.css']\n})\nexport class ChatlistComponent implements OnInit {\n\n  chats: Chat[];\n\n  hasError = false;\n  errorShort: String;\n  errorLong: String;\n\n  constructor(private chatService: ChatService,public datepipe: DatePipe,public dialog: MatDialog) { }\n\n  private loadChats(){\n    this.chatService.getAll().subscribe(\n      data =>{\n        this.chats = data.chats;\n    }, err => {\n      console.log(err);\n      this.hasError = true;\n      this.errorShort = err.error.error;\n      this.errorLong = err.error.message;\n    }\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadChats();\n  }\n\n  private formatCreationTime(chat: Chat): String {\n    return this.datepipe.transform(chat.creationtime, 'dd/MM/yyyy HH:mm');\n  }\n\n  private deleteInDb(chat: Chat): void{\n    this.chatService.delete(chat.id).subscribe(\n        data =>{\n        console.log(data);\n        this.loadChats();\n      }, err => {\n        console.log(err);\n        this.hasError = true;\n        this.errorShort = err.error.error;\n        this.errorLong = err.error.message;\n      }\n    );\n  }\n\n  private showDeleteConfirmation(chat: Chat): void{\n    const dialogRef = this.dialog.open(ConfirmationComponent, {\n      data: {description: \"¿Deséas eliminar permanentemente el chat?\", deletion: true}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result===\"confirm\"){\n        this.deleteInDb(chat);\n      }\n    });\n  }\n\n  private editInDb(chat: Chat, data: any): void{\n    this.chatService.update(chat.id, data).subscribe(\n        data =>{\n        this.loadChats();\n      }, err => {\n        console.log(err);\n        this.hasError = true;\n        this.errorShort = err.error.error;\n        this.errorLong = err.error.message;\n      }\n    );\n  }\n\n  private createInDb(data: any): void{\n    this.chatService.create(data).subscribe(\n        data =>{\n        this.loadChats();\n      }, err => {\n        console.log(err);\n        this.hasError = true;\n        this.errorShort = err.error.error;\n        this.errorLong = err.error.message;\n      }\n    );\n  }\n\n\n  private showEditModal(chat: Chat): void{\n    const dialogRef = this.dialog.open(ChatmodalComponent, {\n      data: {chat: Object.create(chat)}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        let editedChat:Chat = result;\n        this.editInDb(chat, editedChat);\n      }\n    });\n  }\n\n  public showCreationModal(): void{\n    const dialogRef = this.dialog.open(ChatmodalComponent, {\n      data: {chat: {}}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        let newChat:Chat = result;\n        this.createInDb(newChat);\n      }\n    });\n  }\n\n}\n","<whatsim-error *ngIf=\"hasError\" type=\"dialog\" error=\"{{errorShort}}\"></whatsim-error>\n<div class=\"header-flex\">\n    <h2 style=\"text-align: center; align-items: center;\">Tus chats</h2>\n    <button mat-fab aria-label=\"Crear un nuevo chat\" color=\"accent\" (click)=\"showCreationModal()\" style=\"width: auto; padding: 0 15px;border-radius: 50vw;\">\n        <mat-icon>add</mat-icon> Nuevo chat\n    </button>\n</div>\n<div class=\"content-flex\" style=\"margin-top: 2vh;\">\n    <mat-divider></mat-divider>\n</div>\n<div *ngIf=\"chats\" class=\"content-flex\" style=\"margin-top: 2vh;\">\n    <mat-accordion *ngFor=\"let chat of chats\" style=\"margin: 1vh;\">\n        <mat-expansion-panel>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              {{chat.title}}\n            </mat-panel-title>\n            <mat-panel-description>\n              Creación: {{formatCreationTime(chat)}}\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div class=\"content-flex\">\n            <div class=\"row-flex\"><b>Título:</b>{{chat.title}}</div>\n            <div class=\"row-flex\"><b>Nombre del perfil:</b>{{chat.profilename}}</div>\n            <div class=\"row-flex\" *ngIf=\"chat.profilepic\"><b>Foto del perfil:</b>{{chat.profilepic}}</div>\n            <button routerLink=\"/chats/{{chat.id}}\" mat-raised-button aria-label=\"Editar chat\" color=\"primary\" style=\"margin: auto; width: fit-content;\">\n                <mat-icon>launch</mat-icon> Abrir en detalle\n            </button>\n          </div>\n          <mat-divider style=\"margin: 15px 0px;\"></mat-divider>\n          <div class=\"header-flex\">\n            <button mat-stroked-button aria-label=\"Editar chat\" color=\"accent\" (click)=\"showEditModal(chat)\">\n                <mat-icon>edit</mat-icon> Editar\n            </button>\n            <button mat-stroked-button aria-label=\"Editar chat\" color=\"warn\" (click)=\"showDeleteConfirmation(chat)\">\n                <mat-icon>delete</mat-icon> Eliminar\n            </button>\n          </div>\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>\n<div *ngIf=\"!chats\" class=\"header-flex\" style=\"margin-top: 2vh; justify-content: center;\">\n    <h3 style=\"text-align: center; align-items: center;\">No tienes ningún chat aún</h3>\n</div>","<div *ngIf=\"!timemsg\" class=\"message\">\n    <div class=\"bubble mat-elevation-z1\" [ngClass]=\"{alt: message.type == 1, follow: !arrow && message.type==0, altfollow: !arrow && message.type==1}\">\n        <div class=\"message-content\">\n            <div class=\"content\">{{message.content}}</div>\n            <div class=\"time\">{{formatMessageHour(message)}}</div>\n            <!--<div class=\"status\">✓ ⧖</div>-->\n            <div *ngIf=\"message.type==1 && message.status==0\" class=\"status\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 10\" width=\"16\" height=\"15\">\n                    <path fill=\"currentColor\" d=\"M9.75 7.713H8.244V5.359a.5.5 0 0 0-.5-.5H7.65a.5.5 0 0 0-.5.5v2.947a.5.5 0 0 0 .5.5h.094l.003-.001.003.002h2a.5.5 0 0 0 .5-.5v-.094a.5.5 0 0 0-.5-.5zm0-5.263h-3.5c-1.82 0-3.3 1.48-3.3 3.3v3.5c0 1.82 1.48 3.3 3.3 3.3h3.5c1.82 0 3.3-1.48 3.3-3.3v-3.5c0-1.82-1.48-3.3-3.3-3.3zm2 6.8a2 2 0 0 1-2 2h-3.5a2 2 0 0 1-2-2v-3.5a2 2 0 0 1 2-2h3.5a2 2 0 0 1 2 2v3.5z\"></path>\n                </svg>\n            </div>\n            <div *ngIf=\"message.type==1 && message.status==1\" class=\"status\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 10\" width=\"16\" height=\"15\">\n                    <path fill=\"currentColor\" d=\"M10.91 3.316l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"></path>\n                </svg>\n            </div>\n            <div *ngIf=\"message.type==1 && message.status==2\" class=\"status\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 10\" width=\"16\" height=\"15\">\n                    <path fill=\"currentColor\" d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"></path>\n                </svg>\n            </div>\n            <div *ngIf=\"message.type==1 && message.status==3\" class=\"status readed\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 10\" width=\"16\" height=\"15\">\n                    <path fill=\"currentColor\" d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"></path>\n                </svg>\n            </div>\n        </div>\n        <div *ngIf=\"arrow\" class=\"arrow\" [ngClass]=\"{alt: message.type == 1}\"></div>\n    </div>\n</div>\n\n<div *ngIf=\"timemsg\" class=\"message\">\n    <div class=\"timebubble mat-elevation-z1 timemsg\">\n        <div class=\"message-content\">\n            <div class=\"content\">{{formatDate()}}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common'\nimport { Message } from 'src/app/models/message.model';\n\n@Component({\n  selector: 'whatsim-chat-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n\n\n  @Input() message: Message;\n  @Input() arrow: Boolean;\n  @Input() timemsg: Boolean = false;\n  @Input() timedate: Date;\n\n  constructor(public datepipe: DatePipe) { }\n\n  ngOnInit(): void {\n  }\n\n  private formatMessageHour(message: Message): String {\n    return this.datepipe.transform(message.time, 'HH:mm');\n  }\n\n  private formatDate(): String {\n    return this.datepipe.transform(this.timedate, 'dd/MM/yyyy');\n  }\n\n}\n","import {TimeMessage} from './timemessage.model'\nexport type ChatMessage = Message | TimeMessage;\n\nexport class Message{\n    chatid: Number;\n    type: MessageType;\n    time: Date;\n    status: MessageStatus;\n    content: String;\n\n    /*constructor(chatid: number, type: MessageType | number, time: Date, status: MessageStatus | number, content: String){\n        this.chatid = chatid;\n        this.type = type;\n        this.time = time;\n        this.status = status;\n        this.content = content;\n    }*/\n\n    constructor(obj: any){\n        this.chatid = obj.chatid;\n        this.time = obj.time;\n        this.content = obj.content;\n        this.type = MessageType[MessageType[+obj.type]];\n        this.status = MessageStatus[MessageStatus[obj.status]];\n    }\n    /*\n\n    private serialize(): any {\n        var typ: Boolean;\n        var stat: Number;\n        if(this.type) typ = true;\n        else typ = false;\n        switch (this.status) {\n            case \"waiting\":\n                stat = 0;\n                break;\n            case \"sended\":\n                stat = 1;\n                break;\n            case \"recived\":\n                stat = 2;\n                break;\n            case \"readed\":\n                stat = 3;\n                break;\n            default:\n                stat = 0;\n                break;\n        }\n        return {\n            chatid: this.chatid,\n            type: typ,\n            time: stat,\n            status: this.status,\n            content: this.content\n\n        }\n    }*/\n\n    public getType(): MessageType{\n        return this.type;\n    }\n\n    public getTypeString(): String{\n        return MessageType[this.type];\n    }\n}\nexport enum MessageType{\n    SENDED = 1,\n    RECIVED = 0\n}\nexport enum MessageStatus{\n    WAITING = 0,\n    SENDED = 1,\n    RECIVED = 2,\n    READED = 3\n}","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  registerData: any = {\n    email: null,\n    pass: null,\n    displayname: null\n  }\n\n  isSuccessful = false;\n  isFailed = false;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  emailValidator = new FormControl('', [Validators.required, Validators.email, Validators.maxLength(32)]);\n  passwordValidator = new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(22)]);\n  displaynameValidator = new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]);\n\n\n  ngOnInit(): void {\n    this.emailValidator.setErrors({alreadyExisting: false});\n    this.displaynameValidator.setErrors({alreadyExisting: false});\n  }\n\n  signUp(): void {\n    console.log(this.registerData);\n    this.authService.register(this.registerData).subscribe(\n      data => {\n        this.isSuccessful = true;\n        this.isFailed = false;\n        this.router.navigate(['/signin']);\n      },\n      err => {\n        this.isFailed = true;\n        console.log(err);\n        if(err.error.error==\"account_already_exsists\"){\n          this.emailValidator.setErrors({alreadyExisting: true});\n        }else if(err.error.error==\"displayname_already_exsists\"){\n          this.displaynameValidator.setErrors({alreadyExisting: true});\n        }\n      }\n    );\n  }\n\n}","<div class=\"content-flex\">\n  <mat-card class=\"signup-card\">\n    <h2>Crear una nueva cuenta</h2>\n    <div class=\"content-flex signform\">\n      <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n        <mat-label>Correo electrónico</mat-label>\n        <input type=\"email\" matInput placeholder=\"Ej: mail@mail.com\" [formControl]=\"emailValidator\" required [(ngModel)]=\"registerData.email\">\n        <mat-icon matSuffix>email</mat-icon>\n        <mat-error *ngIf=\"emailValidator.hasError('email') && !emailValidator.hasError('required')\">\n        Por favor introduce un correo electrónico válido\n        </mat-error>\n        <mat-error *ngIf=\"emailValidator.hasError('required')\">\n        El email es <strong>necesario</strong>\n        </mat-error>\n        <mat-error *ngIf=\"emailValidator.hasError('alreadyExisting') && isFailed\">\n        El email ya está registrado\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n        <mat-label>Contraseña</mat-label>\n        <input type=\"password\" matInput maxlength=\"22\" [formControl]=\"passwordValidator\" required [(ngModel)]=\"registerData.pass\">\n        <mat-icon matSuffix>lock</mat-icon>\n        <mat-error *ngIf=\"(passwordValidator.hasError('minlength') || passwordValidator.hasError('maxlength')) && !passwordValidator.hasError('required')\">\n        La contraseña debe tener entre 6 y 22 caracteres\n        </mat-error>\n        <mat-error *ngIf=\"passwordValidator.hasError('required')\">\n        La contraseña es <strong>necesaria</strong>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n        <mat-label>Nombre de usuario</mat-label>\n        <input matInput placeholder=\"Ej: usuario1\" [formControl]=\"displaynameValidator\" required [(ngModel)]=\"registerData.displayname\">\n        <mat-icon matSuffix>edit</mat-icon>\n        <mat-error *ngIf=\"(displaynameValidator.hasError('minlength') || displaynameValidator.hasError('maxlength')) && !displaynameValidator.hasError('required')\">\n        El nombre debe tener entre 4 y 16 caracteres\n        </mat-error>\n        <mat-error *ngIf=\"displaynameValidator.hasError('required')\">\n        El nombre de usuario es <strong>necesario</strong>\n        </mat-error>\n        <mat-error *ngIf=\"displaynameValidator.hasError('alreadyExisting') && isFailed\">\n        El nombre de usuario ya está registrado\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <button mat-raised-button color=\"primary\" (click)=\"signUp()\" [disabled]=\"!emailValidator.valid || !passwordValidator.valid || !displaynameValidator.valid\">Registrar cuenta</button>\n  </mat-card>\n  <div class=\"signin-container\">\n    <span>¿Ya tienes una cuenta?</span>\n    <button mat-stroked-button color=\"primary\" [routerLink]=\"'/signin'\">Iniciar sesión</button>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TokenStorageService } from '../../services/token-storage.service';\nimport {Router} from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrormodalComponent } from './errormodal.component';\n\nenum Error {\n  unknown_error,\n  account_not_found,\n  account_wrong_credentials,\n  invalid_web_token,\n  account_already_exsists,\n  displayname_already_exsists,\n  chat_not_found\n}\n\n@Component({\n  selector: 'whatsim-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  @Input() error: String;\n  @Input() type: String;\n  @Input() description: String;\n\n  errorType: Error\n  message: String\n\n  useDialog: Boolean = false;\n  needSignout: Boolean = false;\n  compVisible: Boolean = true;\n\n  constructor(private tokenStorage: TokenStorageService, private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    try {\n      var err:Error = (<any>Error)[this.error.toString()];\n      this.errorType = err;\n      switch (this.errorType) {\n        case Error.unknown_error:\n          this.message = \"Ha ocurrido un error desconocido\";\n          break;\n        case Error.account_not_found:\n          this.message = \"No se ha podido encontrar la cuenta\";\n          break;\n        case Error.account_wrong_credentials:\n          this.message = \"Los credenciales son incorrectos\";\n          break;\n        case Error.invalid_web_token:\n          this.message = \"El token de sesión es invalido\";\n          this.description = this.description==null? \"Prueba cerrando sesión e iniciando de nuevo. Se cerrará sesión automáticamente al cerrar este dialogo\":null;\n          this.needSignout = true;\n          break;\n        case Error.account_already_exsists:\n          this.message = \"La cuenta ya está registrada\";\n          break;\n        case Error.displayname_already_exsists:\n          this.message = \"El nombre de usuario ya se ha utilizado\";\n          break;\n        case Error.chat_not_found:\n            this.message = \"El chat no existe o no es posible acceder a el\";\n            break;\n        default:\n          this.message = \"Ha ocurrido un error desconocido\";\n          break;\n      }\n      if(this.type==\"dialog\"){\n        this.useDialog = true;\n        if(this.needSignout){\n          this.openDialogAndSignout();\n        }else this.openDialog();\n      }\n    } catch (error) {\n      console.log(\"No se encontro error: \"+error);\n    }\n  }\n\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ErrormodalComponent, {\n      data: { errorTitle: this.message, errorDescription: this.description }\n    });\n  }\n\n  openDialogAndSignout(): void {\n    const dialogRef = this.dialog.open(ErrormodalComponent, {\n      data: { errorTitle: this.message, errorDescription: this.description }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.tokenStorage.signOut();\n      //window.location.reload()\n      this.router.navigate(['/signin']);\n    });\n  }\n\n  close(){\n    this.compVisible = false;\n  }\n\n}\n","<div id=\"outer\" *ngIf=\"!useDialog && compVisible\">\n    <div id=\"error\" class=\"mat-elevation-z4\" (click)=\"close()\">\n        <h3>{{message}}</h3>\n        <span *ngIf=\"description!=null && description!=''\">{{description}}</span>\n        <span *ngIf=\"description==null || description==''\">{{message}}</span>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content-flex\">\n    <img style=\"width: 40%;\" src=\"/assets/images/whatsim_green.png\">\n</div>","<whatsim-error *ngIf=\"hasError\" type=\"dialog\" error=\"{{errorShort}}\" description=\"{{errorLong}}\"></whatsim-error>\n<div class=\"content-flex\">\n    <mat-card class=\"profile-card\">\n      <h2>Tu cuenta</h2>\n      <div class=\"content-flex flex-left\" style=\"width: 100%;\">\n        <div class=\"content-flex flex-left\" style=\"flex-direction: row;\">\n          <h4><b>Nombre de usuario: </b></h4> <span>{{name}}</span>\n        </div>\n        <div class=\"content-flex flex-left\" style=\"flex-direction: row;\">\n          <h4><b>Correo electrónico: </b></h4> <span>{{email}}</span>\n        </div>\n        <div class=\"content-flex flex-left\" style=\"flex-direction: row;\">\n          <h4><b>Fecha de registro: </b></h4> <span>{{joindate}}</span>\n        </div>\n      </div>\n    </mat-card>\n    <button mat-raised-button aria-label=\"Eliminar cuenta\" color=\"warn\" (click)=\"showConfirmation()\">\n      <mat-icon>delete</mat-icon>\n      Eliminar cuenta\n    </button>\n    <div style=\"margin: auto;\" *ngIf=\"showDeleteConfirmation\">\n      <mat-card class=\"profile-card\">\n        <h2>¿Estás seguro?</h2>\n        <h3>Tu cuenta se eliminará para siempre</h3>\n        <button mat-raised-button aria-label=\"Confirmar eliminar cuenta\" color=\"warn\" (click)=\"deleteAccount()\">\n          <mat-icon>delete_forever</mat-icon>\n          Eliminar cuenta\n        </button>\n        <button mat-stroked-button aria-label=\"Cancelar\" (click)=\"hideConfirmation()\">Cancelar</button>\n      </mat-card>\n    </div>\n    <mat-spinner *ngIf=\"loading\"></mat-spinner>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../services/user.service'\nimport { DatePipe } from '@angular/common'\nimport { TokenStorageService } from '../../services/token-storage.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  \n  name: String;\n  email: String;\n  joindate: String;\n\n  showDeleteConfirmation: Boolean = false;\n\n  hasError: Boolean = false;\n  errorShort: String;\n  errorLong: String;\n  loading: Boolean = false;\n\n  constructor(private tokenStorage: TokenStorageService, private router: Router,private userService: UserService, public datepipe: DatePipe) { }\n\n  ngOnInit(): void {\n    this.userService.getUserInfo().subscribe(\n      data => {\n        this.name = data.user.displayname;\n        this.email = data.user.email;\n        var d = new Date(data.user.joindate);\n        this.joindate = this.datepipe.transform(d, 'dd/MM/yyyy');\n      },\n      err => {\n        console.log(err);\n        this.hasError = true;\n        this.errorShort = err.error.error;\n        this.errorLong = err.error.message;\n      }\n    );\n  }\n\n  showConfirmation(){\n    this.showDeleteConfirmation = true;\n  }\n  hideConfirmation(){\n    this.showDeleteConfirmation = false;\n  }\n\n  deleteAccount(){\n    this.userService.deleteAccount().subscribe({\n      next: data => {\n        //console.log(\"Ok\");\n        this.tokenStorage.signOut();\n        this.loading = true;\n        setTimeout(()=>{ \n          window.location.reload();\n        }, 1000);\n      },\n      error: err => {\n        console.log(err);\n        this.hasError = true;\n        this.errorShort = err.error.error;\n        this.errorLong = err.error.message;\n      }\n    });\n  }\n}","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'whatsim-chatmodal',\n  templateUrl: './chatmodal.component.html',\n  styleUrls: ['./chatmodal.component.css']\n})\nexport class ChatmodalComponent {\n\n\n  constructor(\n    public dialogRef: MatDialogRef<ChatmodalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { \n      \n    }\n\n    titleValidator = new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(22)]);\n    profileValidator = new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(32)]);\n\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n}\n\n","<h1 *ngIf=\"data.chat.title\" mat-dialog-title>Editar Chat</h1>\n<h1 *ngIf=\"!data.chat.title\" mat-dialog-title>Crear nuevo chat</h1>\n<div mat-dialog-content>\n    <mat-form-field appearance=\"standard\" style=\"width: 100%;\">\n        <mat-label>Título</mat-label>\n        <input matInput type=\"text\" maxlength=\"22\" [formControl]=\"titleValidator\"  [(ngModel)]=\"data.chat.title\">\n    </mat-form-field>\n    <mat-form-field appearance=\"standard\" style=\"width: 100%;\">\n        <mat-label>Nombre de perfil</mat-label>\n        <input matInput type=\"text\" maxlength=\"32\" [formControl]=\"profileValidator\" [(ngModel)]=\"data.chat.profilename\">\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"data.chat\" [disabled]=\"titleValidator.invalid || profileValidator.invalid\" >Enviar</button>\n    <button mat-button mat-dialog-close>Cerrar</button>\n</div>","import { Component, OnInit, NgZone, ViewChild} from '@angular/core';\nimport { ChatMessage, Message, MessageStatus } from 'src/app/models/message.model';\nimport { ChatService } from '../../../services/chat.service';\nimport { MessageService } from '../../../services/message.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChatDetail } from 'src/app/models/chatdetailed.model';\nimport {MessagemodalComponent} from '../message/messagemodal.component';\nimport { ConfirmationComponent } from '../../modals/confirmation/confirmation.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {take} from 'rxjs/operators';\nimport { TimeMessage } from 'src/app/models/timemessage.model';\n\n@Component({\n  selector: 'app-chatdetail',\n  templateUrl: './chatdetail.component.html',\n  styleUrls: ['./chatdetail.component.css']\n})\nexport class ChatdetailComponent implements OnInit {\n\n  chat: ChatDetail;\n\n  hasError = false;\n  errorShort: String;\n  errorLong: String;\n\n  msgContent: String = \"\";\n  loaded: Boolean = false;\n  chatMessages:ChatMessage[] = [];\n\n  \n  constructor(private chatService: ChatService, private messageService: MessageService, private _ngZone: NgZone,\n    private route: ActivatedRoute,\n    private router: Router, public dialog: MatDialog) { }\n\n    @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n    triggerResize() {\n      // Wait for changes to be applied, then trigger textarea resize.\n      this._ngZone.onStable.pipe(take(1))\n          .subscribe(() => this.autosize.resizeToFitContent(true));\n    }\n\n\n  ngOnInit(): void {\n    this.loadChat(this.route.snapshot.params.id);\n  }\n\n  private isTimeMessage(message:ChatMessage){\n    return message instanceof TimeMessage;\n  }\n\n  private hasArrow(message:ChatMessage, ind:number){\n    return (ind==0 && !this.isTimeMessage(message) || (ind>0 && (!this.isTimeMessage(message) && (this.isTimeMessage(this.chatMessages[ind-1]) \n    || (this.chatMessages[ind-1].type!=message.type) ))));\n  }\n\n\n  private loadChat(id): void{\n    this.loaded = false;\n    this.chatMessages = [];\n    this.chatService.getDetail(id).subscribe(\n      data =>{\n        let jsonMsgs = data.chat.messages;\n        let msgs:Message[] = [];\n        for(let m of jsonMsgs){\n          var ind = jsonMsgs.indexOf(m);\n          console.log(ind);\n          if(ind==0){\n            var cmsg:TimeMessage = new TimeMessage({chatid: id, time: m.time});\n            this.chatMessages.push(cmsg);\n          }else{\n            var previousMsg:Message = new Message(jsonMsgs[ind-1]);\n            console.log(previousMsg);\n            if(this.getDaysDifference(new Date(previousMsg.time), new Date(m.time))>=1){\n              var cmsg:TimeMessage = new TimeMessage({chatid: id, time: m.time});\n              this.chatMessages.push(cmsg);\n            }\n          }\n          /*if(ind>0)console.log(\"previous msg: \"+JSON.stringify(jsonMsgs[ind-1]));\n          if(ind==0 || (ind>0 && (this.getDaysDifference(jsonMsgs[ind-1].time, m.time)>=1)) ){\n            var cmsg:TimeMessage = {chatid: id, time: m.time};\n            this.chatMessages.push(cmsg);\n          }*/\n          var msg:Message = new Message(m);\n          msgs.push(msg);\n          this.chatMessages.push(msg);\n        }\n        this.chat = new ChatDetail(data.chat);\n        this.chat.messages = msgs;\n        console.log(this.chat);\n        console.log(this.chatMessages);\n        this.loaded = true;\n    }, err => {\n      console.log(err);\n      this.hasError = true;\n      this.errorShort = err.error.error;\n      this.errorLong = err.error.message;\n      this.loaded = true;\n    }\n    );\n  }\n\n  private getDaysDifference(date1: Date, date2: Date): Number{\n    return (date2.getTime() - date1.getTime()) / (1000 * 3600 * 24);\n  }\n\n  private createInDb(data: any): void{\n    this.messageService.create(data).subscribe(\n        data =>{\n          this.loadChat(this.chat.id);\n      }, err => {\n        console.log(err);\n        this.hasError = true;\n        this.errorShort = err.error.error;\n        this.errorLong = err.error.message;\n      }\n    );\n  }\n\n\n  public showNewModal(): void{\n    if(this.msgContent!==\"\"){\n      const dialogRef = this.dialog.open(MessagemodalComponent, {\n        data: {message: {}}\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if(result){\n          console.log(result);\n          let newMessage:Message = new Message(result);\n          newMessage.chatid = this.chat.id;\n          newMessage.content =this.msgContent;\n  \n          console.log(newMessage);\n          this.createInDb(newMessage);\n          this.msgContent = \"\";\n        }\n      });\n    }\n\n  }\n\n}\n","<whatsim-error *ngIf=\"hasError\" type=\"dialog\" error=\"{{errorShort}}\"></whatsim-error>\n<div class=\"absolute-container\">\n    <div class=\"container\">\n        <div class=\"toolbar-container mat-elevation-z4\">\n            <div class=\"picturecontainer\">\n                <img class=\"profileimage\" src=\"/assets/images/defaultprofilepic.png\">\n            </div>\n            <div class=\"name-container\">{{chat.profilename}}</div>\n            <div class=\"spacer\"></div>\n            <button mat-icon-button [matMenuTriggerFor]=\"chatmenu\" aria-label=\"Opciones\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n            <mat-menu #chatmenu=\"matMenu\">\n                <button mat-menu-item>Eliminar mensaje</button>\n                <button mat-menu-item>Editar mensaje</button>\n            </mat-menu>\n        </div>\n        <div class=\"messages-container\">\n            <mat-spinner *ngIf=\"!loaded\" class=\"center\"></mat-spinner>\n            <whatsim-chat-message *ngFor=\"let message of chatMessages; let ind = index\"\n            [message]=\"message\" [arrow]=\"hasArrow(message, ind)\"\n            [timemsg]=\"isTimeMessage(message)\" [timedate]=\"message.time\" [ngClass]=\"{center: isTimeMessage(message)}\">\n            </whatsim-chat-message>\n        </div>\n        <!--\n        <div class=\"messages-container\" *ngIf=\"(chat.messages==null || chat.messages.length<=0) && loaded\"></div>\n        <div class=\"messages-container\" *ngFor=\"let message of chat.messages; let ind = index\">\n            <whatsim-chat-message *ngIf=\"(ind==0 || (ind>0 && (getDaysDifference(message.time)-getDaysDifference(chat.messages[ind-1].time)>=1)))\"\n                class=\"center\" [timemsg]=\"true\" [timedate]=\"message.time\">\n            </whatsim-chat-message>\n            <whatsim-chat-message [message]=\"message\" [arrow]=\"(ind==0 || (ind>0 && chat.messages[ind-1].type!=message.type))\">\n            </whatsim-chat-message>\n        </div>\n        -->\n        <div class=\"bottombar-container\">\n            <div class=\"bottombar mat-elevation-z2\">\n                <button mat-icon-button aria-label=\"Emojis\" style=\"align-self: flex-end;\">\n                    <mat-icon>emoji_emotions</mat-icon>\n                </button>\n                <div class=\"textinp\">\n                    <!--<span class=\"textarea\" role=\"textbox\" contenteditable>a</span>-->\n                    <textarea style=\"font-size: large;\" cdkTextareaAutosize placeholder=\"Escribe un mensaje\"\n                    #autosize=\"cdkTextareaAutosize\" cdkAutosizeMaxRows=\"6\" [(ngModel)]=\"msgContent\"></textarea>\n                </div>\n            </div>\n            <div class=\"spacer\"></div>\n            <div style=\"margin: 15px 5px;\">\n                <button mat-mini-fab aria-label=\"Enviar\" color=\"primary\" (click)=\"showNewModal()\">\n                    <mat-icon>send</mat-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n<!--\n<div class=\"container\" style=\"background-color: brown;\">\n    <div class=\"toolbar-container mat-elevation-z4\" style=\"background-color: #1EBEA5;\">\n        <div class=\"picturecontainer\">\n            <img class=\"profileimage\" src=\"/assets/images/defaultprofilepic.png\">\n        </div>\n        <div>asd</div>\n        <div>asd</div>\n        <div>asd</div>\n    </div>\n    <div class=\"messages-container\" style=\"background-color: beige;\">\n        asd\n        asd\n    </div>\n</div>\n-->\n","import { MessageType } from \"./message.model\";\n\nexport class TimeMessage{\n    chatid: Number;\n    time: Date\n    type?: MessageType\n\n    \n    constructor(obj: any){\n        this.chatid = obj.chatid;\n        this.time = obj.time;\n    }\n}","import { Component } from '@angular/core';\nimport { TokenStorageService } from './services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WhatSim';\n  isLogged = false;\n  displayname: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLogged = !!this.tokenStorageService.getToken();\n\n    if (this.isLogged) {\n      const user = this.tokenStorageService.getUser();\n      this.displayname = user.displayname;\n    }\n  \n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","<app-navbar class=\"navbar\"></app-navbar>\n\n<div class=\"page-container\">\n    <router-outlet></router-outlet>\n</div>\n\n<!--\n<router-outlet class=\"main-content\"></router-outlet>\n-->","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport {TokenStorageService} from './token-storage.service'\n\n@Injectable()\nexport class AuthRedirectersService implements CanActivate{\n\n  constructor(private tokenStorage: TokenStorageService, private router: Router) { }\n\n  canActivate() {\n    // If the user is not logged in we'll send them back to the home page\n    if (!this.tokenStorage.getToken()) {\n        this.router.navigate(['/','signin']);\n        return false;\n    }\n\n    return true;\n}\n}\n\n","import { Message } from 'src/app/models/message.model';\nexport class ChatDetail{\n    id: number;\n    title: string;\n    creationtime: Date;\n    profilepic?: any;\n    profilename: string;\n    messages?: Message[];\n\n    constructor(obj: any){\n        this.id = obj.id;\n        this.title = obj.title;\n        this.creationtime = obj.creationtime;\n        this.profilepic = obj.profilepic;\n        this.profilename = obj.profilename;\n    }\n}","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'whatsim-errormodal',\n  templateUrl: './errormodal.component.html',\n  styleUrls: ['./errormodal.component.css']\n})\nexport class ErrormodalComponent{\n\n  constructor(\n    public dialogRef: MatDialogRef<ErrormodalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n}\n","<h1 mat-dialog-title>{{data.errorTitle}}</h1>\n<div mat-dialog-content *ngIf=\"data.errorDescription!=null && data.errorDescription!=''\">{{data.errorDescription}}</div>\n<div mat-dialog-content *ngIf=\"data.errorDescription==null || data.errorDescription==''\">{{data.errorTitle}}</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Cerrar</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { TokenStorageService } from '../../services/token-storage.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  loginData: any = {\n    email: null,\n    pass: null\n  };\n  isLogged = false;\n  isFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) { }\n\n  emailValidator = new FormControl('', [Validators.required, Validators.email, Validators.maxLength(32)]);\n  passwordValidator = new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(22)]);\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLogged = true;\n      this.router.navigate(['/home']);\n    }\n    this.emailValidator.setErrors({notFound: false});\n    this.emailValidator.setErrors({wrongCredentials: false});\n    this.passwordValidator.setErrors({wrongCredentials: false});\n  }\n\n  signIn(): void {\n    //const { email, pass } = this.loginForm;\n\n    this.authService.login(this.loginData).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isFailed = false;\n        this.isLogged = true;\n        this.router.navigate(['/home']);\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isFailed = true;\n        console.log(err);\n        if(err.error.error==\"account_not_found\"){\n          this.emailValidator.setErrors({notFound: true});\n        }else if(err.error.error==\"account_wrong_credentials\"){\n          this.emailValidator.setErrors({wrongCredentials: true});\n          this.passwordValidator.setErrors({wrongCredentials: true});\n        }\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<div class=\"content-flex\">\n    <mat-card class=\"signin-card\">\n      <h2>Inicia sesión con tu cuenta</h2>\n      <div class=\"content-flex signform\">\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n          <mat-label>Correo electrónico</mat-label>\n          <input type=\"email\" matInput placeholder=\"Ej: mail@mail.com\" [formControl]=\"emailValidator\" required [(ngModel)]=\"loginData.email\">\n          <mat-icon matSuffix>email</mat-icon>\n          <mat-error *ngIf=\"emailValidator.hasError('email') && !emailValidator.hasError('required')\">\n          Por favor introduce un correo electrónico válido\n          </mat-error>\n          <mat-error *ngIf=\"emailValidator.hasError('required')\">\n          El email es <strong>necesario</strong>\n          </mat-error>\n          <mat-error *ngIf=\"emailValidator.hasError('notFound') && isFailed\">\n          No se encontró ninguna cuenta con este email\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n          <mat-label>Contraseña</mat-label>\n          <input type=\"password\" matInput maxlength=\"22\" [formControl]=\"passwordValidator\" required [(ngModel)]=\"loginData.pass\">\n          <mat-icon matSuffix>lock</mat-icon>\n          <mat-error *ngIf=\"(passwordValidator.hasError('minlength') || passwordValidator.hasError('maxlength')) && !passwordValidator.hasError('required')\">\n          La contraseña debe tener entre 6 y 22 caracteres\n          </mat-error>\n          <mat-error *ngIf=\"passwordValidator.hasError('required')\">\n          La contraseña es <strong>necesaria</strong>\n          </mat-error>\n          <mat-error *ngIf=\"passwordValidator.hasError('wrongCredentials') && isFailed\">\n          Los datos introducidos no concuerdan: Comprueba la contraseña y el email\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <button mat-raised-button color=\"primary\" (click)=\"signIn()\" [disabled]=\"!emailValidator.valid || !passwordValidator.valid\">Iniciar sesión</button>\n    </mat-card>\n    <div class=\"signup-container\">\n      <span>¿Todavía no tienes una cuenta?</span>\n      <button mat-stroked-button color=\"primary\" [routerLink]=\"'/signup'\">Crear nueva cuenta</button>\n    </div>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { DatePipe } from '@angular/common'\n\nimport {MatCardModule} from '@angular/material/card';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {AuthRedirectersService} from './services/auth-redirecters.service'\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport {NgxMatDatetimePickerModule,NgxMatNativeDateModule,NgxMatTimepickerModule} from '@angular-material-components/datetime-picker';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { SignupComponent } from './components/signup/signup.component';\nimport { AuthInterceptor } from './helpers/auth.interceptor';\nimport { HomeComponent } from './components/home/home.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { ErrorpageComponent } from './components/error/errorpage.component';\nimport { ErrormodalComponent } from './components/error/errormodal.component';\nimport { ChatlistComponent } from './components/chat/chatlist/chatlist.component';\nimport { ConfirmationComponent } from './components/modals/confirmation/confirmation.component';\nimport { ChatmodalComponent } from './components/chat/chatmodal/chatmodal.component';\nimport { ChatdetailComponent } from './components/chat/chatdetail/chatdetail.component';\nimport { MessageComponent } from './components/chat/message/message.component';\nimport { MessagemodalComponent } from './components/chat/message/messagemodal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SignupComponent,\n    HomeComponent,\n    SigninComponent,\n    ProfileComponent,\n    ErrorComponent,\n    ErrorpageComponent,\n    ErrormodalComponent,\n    ChatlistComponent,\n    ConfirmationComponent,\n    ChatmodalComponent,\n    ChatdetailComponent,\n    MessageComponent,\n    MessagemodalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    TextFieldModule,\n    MatDatepickerModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule\n  ],\n  providers: [AuthInterceptor, DatePipe, AuthRedirectersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n\n}","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../services/token-storage.service';\nimport { Observable } from 'rxjs';\n\nconst TOKEN_HEADER_KEY = 'x-access-token';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n        authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];","import { Component } from '@angular/core';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { TokenStorageService } from '../services/token-storage.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  isLogged = false;\n  displayname: string;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    ngOnInit(): void {\n      this.isLogged = !!this.tokenStorageService.getToken();\n  \n      if (this.isLogged) {\n        const user = this.tokenStorageService.getUser();\n        this.displayname = user.displayname;\n      }\n    }\n\n  constructor(private breakpointObserver: BreakpointObserver, private tokenStorageService: TokenStorageService) {}\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n  \n\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z4\">\n  <mat-toolbar-row class=center style=\"padding: 10px;\">\n    <div class=\"logocontainer\">\n      <span>WhatSim</span>\n      <img class=\"logoimage\" src=\"/assets/images/whatsim_white.png\">\n    </div>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n    <button mat-button routerLink=\"\" style=\"font-size: medium;\">Inicio</button>\n    <button *ngIf=\"isLogged\" routerLink=\"chats\" mat-button style=\"font-size: medium;\">Mis chats</button>\n    <div class=\"spacer\"></div>\n    <div *ngIf=\"isLogged\">\n      <button mat-button style=\"font-size: medium;\" [matMenuTriggerFor]=\"accountmenu\" aria-label=\"Cuenta\">\n        <mat-icon>account_circle</mat-icon>\n        {{displayname}}\n      </button>\n      <mat-menu #accountmenu=\"matMenu\">\n        <button mat-menu-item routerLink=\"profile\">Mi cuenta</button>\n        <button mat-menu-item (click)=\"logout()\">Cerrar sesión</button>\n      </mat-menu>\n    </div>\n    <div *ngIf=\"!isLogged\">\n      <button mat-button routerLink=\"signin\" style=\"font-size: medium;\">Iniciar sesión</button>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst AUTH_BASE_URL = 'http://whatsim.eltrueno.es:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(data): Observable<any> {\n    return this.http.post(AUTH_BASE_URL + 'signin', {\n      email: data.email,\n      pass: data.pass\n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(AUTH_BASE_URL + 'signup', {\n      email: user.email,\n      displayname: user.displayname,\n      pass: user.pass\n    }, httpOptions);\n  }\n}","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'whatsim-confirm',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.css']\n})\nexport class ConfirmationComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n}\n","<h1 mat-dialog-title>¿Estás seguro?</h1>\n<div mat-dialog-content>\n    <p *ngIf=\"data.description!=null && data.description!=''\">{{data.description}}</p>\n</div>\n<div mat-dialog-actions>\n  <button *ngIf=\"!data.deletion\" mat-button mat-dialog-close=\"confirm\" color=\"warn\">Confirmar</button>\n  <button *ngIf=\"data.deletion\" mat-raised-button mat-dialog-close=\"confirm\" color=\"warn\" aria-label=\"Editar chat\">\n    <mat-icon>delete_forever</mat-icon> Eliminar\n  </button>\n  <button mat-button mat-dialog-close=\"cancel\" cdkFocusInitial>Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorageService } from './token-storage.service';\n\nconst API_URL = 'http://whatsim.eltrueno.es:8080/api/profile/';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  token: String;\n  headers: any;\n\n  constructor(private http: HttpClient, private tokenStorage: TokenStorageService) { \n    this.token = tokenStorage.getToken();\n    this.headers = {headers: \n      new HttpHeaders(\n        {'Content-Type': 'application/json',\n      'x-access-token': this.token.toString()\n    })};\n  }\n\n  getUserInfo(): Observable<any> {\n    return this.http.get(API_URL + 'userinfo', this.headers);\n  }\n\n  deleteAccount(): Observable<any> {\n    return this.http.delete(API_URL + 'delete', this.headers);\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-errorpage',\n  templateUrl: './errorpage.component.html',\n  styleUrls: ['./errorpage.component.css']\n})\nexport class ErrorpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"outer\">\n    <div class=\"animation-ctn\">\n          <div class=\"icon icon--order-success svg\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"154px\" height=\"154px\">  \n                <g fill=\"none\" stroke=\"#F44812\" stroke-width=\"2\"> \n                    <circle cx=\"77\" cy=\"77\" r=\"72\" style=\"stroke-dasharray:480px, 480px; stroke-dashoffset: 960px;\"></circle>\n                    <circle id=\"colored\" fill=\"#F44812\" cx=\"77\" cy=\"77\" r=\"72\" style=\"stroke-dasharray:480px, 480px; stroke-dashoffset: 960px;\"></circle>\n                    <polyline class=\"st0\" stroke=\"#fff\" stroke-width=\"10\" points=\"43.5,77.8  112.2,77.8 \" style=\"stroke-dasharray:100px, 100px; stroke-dashoffset: 200px;\"/>   \n                 </g> \n            </svg>\n        </div>\n    </div>\n    <div id=\"error\">Error 404: No se pudo encontrar la página</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorageService } from './token-storage.service';\n\nconst API_URL = 'http://whatsim.eltrueno.es:8080/api/chat/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  token: String;\n  headers: any;\n  \n  constructor(private http: HttpClient,  private tokenStorage: TokenStorageService) { \n    this.token = tokenStorage.getToken();\n    this.headers = {headers: \n      new HttpHeaders(\n        {'Content-Type': 'application/json',\n      'x-access-token': this.token.toString()\n    })};\n  }\n\n  getAll(): Observable<any> {\n    return this.http.get(API_URL, this.headers);\n  }\n\n  getDetail(id: any): Observable<any> {\n    return this.http.get(API_URL+id+\"/detailed\", this.headers);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(API_URL, data, this.headers);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(API_URL+id, this.headers);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(API_URL+id, data, this.headers);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorageService } from './token-storage.service';\n\nconst API_URL = 'http://whatsim.eltrueno.es:8080/api/message/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  token: String;\n  headers: any;\n\n  constructor(private http: HttpClient, private tokenStorage: TokenStorageService) { \n    this.token = tokenStorage.getToken();\n    this.headers = {headers: \n      new HttpHeaders(\n        {'Content-Type': 'application/json',\n      'x-access-token': this.token.toString()\n    })};\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(API_URL, data, this.headers);\n  }\n\n  delete(data: any): Observable<any> {\n    return this.http.post(API_URL+\"delete\", data, this.headers);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';;\nimport {AuthRedirectersService} from './services/auth-redirecters.service'\n\nimport { HomeComponent } from './components/home/home.component';\nimport {SignupComponent} from './components/signup/signup.component'\nimport {SigninComponent} from './components/signin/signin.component'\nimport {ProfileComponent} from './components/profile/profile.component'\nimport {ErrorpageComponent} from './components/error/errorpage.component'\nimport {ChatlistComponent} from './components/chat/chatlist/chatlist.component'\nimport {ChatdetailComponent} from './components/chat/chatdetail/chatdetail.component'\n\nconst routes: Routes = [\n  {path: '', component:HomeComponent},\n  {path: 'home', redirectTo:'/'},\n  { path: 'signup', component: SignupComponent },\n  {path:'signin', component: SigninComponent},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthRedirectersService]},\n  {path: 'chats', component: ChatlistComponent, canActivate: [AuthRedirectersService]},\n  {path: 'chats/:id', component: ChatdetailComponent, canActivate: [AuthRedirectersService]},\n  {path: '404', component: ErrorpageComponent},\n  {path: '**', redirectTo: '/404'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}